openapi: 3.0.0
info:
  title: JobHunt API
  description: A simple API to authenticate user and access JobHunt app info
  contact:
    name: Chung Kao
    email: chungckao@gmail.com
  version: "1.0"
servers:
  - url: http://localhost:3001/api/v1
    description: Development local server
  - url: https://ctd-jobhuntapp.onrender.com/api/v1
    description: Production server on render.com
paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: Register User
      operationId: RegisterUser
      parameters: []
      requestBody:
        description: Username, email and password
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterUserRequest"
            example:
              username: Chung Kao
              email: chungckao@gmail.com
              password: San#3Dragons?
        required: true
      responses:
        "201":
          description: User created
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
        - Auth
      summary: Login User
      operationId: LoginUser
      parameters: []
      requestBody:
        description: User email and password
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginUserRequest"
            example:
              email: chungckao@gmail.com
              password: San#3Dragons?
        required: true
      responses:
        "200":
          description: User logged in
          headers: {}
      deprecated: false
      security: []
  /jobs:
    post:
      tags:
        - Jobs
      summary: Create Job
      operationId: CreateJob
      parameters: []
      requestBody:
        description: Company and position are required
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateJobRequest"
            example:
              company: Zoom
              position: UI Designer
              location: Mountain View, CA
              contact: Mary Alice
              email: maryalice@zoom.com
        required: true
      responses:
        "200":
          description: Job created
          headers: {}
      deprecated: false
      security:
        - bearer: []
    get:
      tags:
        - Jobs
      summary: Get 10 Jobs
      operationId: Get10Jobs
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          required: true
          description: The page number
      responses:
        "200":
          description: Fetched 10 jobs
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The job ID
    get:
      tags:
        - Jobs
      summary: Get Single Job
      operationId: GetSingleJob
      parameters:
        - name: id
          in: path
          description: "The job ID"
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Fetched job
          headers: {}
      deprecated: false
      security:
        - bearer: []
    patch:
      tags:
        - Jobs
      summary: Update Job
      operationId: UpdateJob
      parameters:
        - name: id
          in: path
          description: "The job ID"
          required: true
          style: simple
          schema:
            type: string
      requestBody:
        description: Company and position are required
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateJobRequest"
            example:
              company: PayPal
              position: Full-stack Engineer
              location: San Jose, CA
              contact: John Gannon
              email: johngannon@paypal.com
              status: interviewed
        required: true
      responses:
        "200":
          description: Updated job
          headers: {}
      deprecated: false
      security:
        - bearer: []
    delete:
      tags:
        - Jobs
      summary: Delete Job
      operationId: DeleteJob
      parameters:
        - name: id
          in: path
          description: "The job ID"
          required: true
          style: simple
          schema:
            type: string
      responses:
        "200":
          description: Deleted job
          headers: {}
      deprecated: false
      security:
        - bearer: []
components:
  schemas:
    RegisterUserRequest:
      title: RegisterUserRequest
      required:
        - username
        - email
        - password
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        username: Alex Wong
        email: bobhunt@yahoo.com
        password: secret
    LoginUserRequest:
      title: LoginUserRequest
      required:
        - eamil
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: bobhunt@yahoo.com
        password: secret
    CreateJobRequest:
      title: CreateJobRequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: PayPal
        position: Software Engineer
    UpdateJobRequest:
      title: UpdateJobRequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: Google
        position: UI Designer
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
  - name: Auth
    description: User regiustration and login
  - name: Jobs
    description: CRUD operations on job entries
